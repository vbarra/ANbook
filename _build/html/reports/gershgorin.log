Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.9/3.9.13/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/lib/python3.9/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from sympy import Matrix
n = 5 

D = np.diag([0, -1, 4 , 1 , 7 ])
M = 1.2*np.random.rand(n, n) + D

R = np.zeros(n) 
for i in range(n):
    R[i] = sum(abs(M[i,:])) - abs(M[i,i])

eigenvalues = np.linalg.eigvals(M)

fig, ax = plt.subplots()
for k in range(n):
    x, y = M[k,k].real, M[k,k].imag
    ax.add_artist( plt.Circle((x, y), R[k], alpha=0.5) )
    plt.plot(eigenvalues[k].real, eigenvalues[k].imag, 'k+')
    plt.text(D[k],0.2,str(D[k]))

ax.axis([-4, 12.5, -4, 9])
ax.set_aspect(1)    
plt.xlabel("$x$")
plt.ylabel("$y$")
plt.title("Disques de Gershgorin dans le plan complexe")
plt.tight_layout()
Matrix(M).evalf(4)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
File [0;32m/usr/local/lib/python3.9/site-packages/IPython/core/formatters.py:339[0m, in [0;36mBaseFormatter.__call__[0;34m(self, obj)[0m
[1;32m    337[0m     [38;5;28;01mpass[39;00m
[1;32m    338[0m [38;5;28;01melse[39;00m:
[0;32m--> 339[0m     [38;5;28;01mreturn[39;00m [43mprinter[49m[43m([49m[43mobj[49m[43m)[49m
[1;32m    340[0m [38;5;66;03m# Finally look for special method names[39;00m
[1;32m    341[0m method [38;5;241m=[39m get_real_method(obj, [38;5;28mself[39m[38;5;241m.[39mprint_method)

File [0;32m/usr/local/lib/python3.9/site-packages/IPython/core/pylabtools.py:151[0m, in [0;36mprint_figure[0;34m(fig, fmt, bbox_inches, base64, **kwargs)[0m
[1;32m    148[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackend_bases[39;00m [38;5;28;01mimport[39;00m FigureCanvasBase
[1;32m    149[0m     FigureCanvasBase(fig)
[0;32m--> 151[0m [43mfig[49m[38;5;241;43m.[39;49m[43mcanvas[49m[38;5;241;43m.[39;49m[43mprint_figure[49m[43m([49m[43mbytes_io[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m
[1;32m    152[0m data [38;5;241m=[39m bytes_io[38;5;241m.[39mgetvalue()
[1;32m    153[0m [38;5;28;01mif[39;00m fmt [38;5;241m==[39m [38;5;124m'[39m[38;5;124msvg[39m[38;5;124m'[39m:

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/backend_bases.py:2295[0m, in [0;36mFigureCanvasBase.print_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2289[0m     renderer [38;5;241m=[39m _get_renderer(
[1;32m   2290[0m         [38;5;28mself[39m[38;5;241m.[39mfigure,
[1;32m   2291[0m         functools[38;5;241m.[39mpartial(
[1;32m   2292[0m             print_method, orientation[38;5;241m=[39morientation)
[1;32m   2293[0m     )
[1;32m   2294[0m     [38;5;28;01mwith[39;00m [38;5;28mgetattr[39m(renderer, [38;5;124m"[39m[38;5;124m_draw_disabled[39m[38;5;124m"[39m, nullcontext)():
[0;32m-> 2295[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfigure[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m   2297[0m [38;5;28;01mif[39;00m bbox_inches:
[1;32m   2298[0m     [38;5;28;01mif[39;00m bbox_inches [38;5;241m==[39m [38;5;124m"[39m[38;5;124mtight[39m[38;5;124m"[39m:

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/artist.py:73[0m, in [0;36m_finalize_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     71[0m [38;5;129m@wraps[39m(draw)
[1;32m     72[0m [38;5;28;01mdef[39;00m [38;5;21mdraw_wrapper[39m(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m---> 73[0m     result [38;5;241m=[39m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     74[0m     [38;5;28;01mif[39;00m renderer[38;5;241m.[39m_rasterizing:
[1;32m     75[0m         renderer[38;5;241m.[39mstop_rasterizing()

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/artist.py:50[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     47[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     48[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 50[0m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m     51[0m [38;5;28;01mfinally[39;00m:
[1;32m     52[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/figure.py:2837[0m, in [0;36mFigure.draw[0;34m(self, renderer)[0m
[1;32m   2834[0m         [38;5;66;03m# ValueError can occur when resizing a window.[39;00m
[1;32m   2836[0m [38;5;28mself[39m[38;5;241m.[39mpatch[38;5;241m.[39mdraw(renderer)
[0;32m-> 2837[0m [43mmimage[49m[38;5;241;43m.[39;49m[43m_draw_list_compositing_images[49m[43m([49m
[1;32m   2838[0m [43m    [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43martists[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msuppressComposite[49m[43m)[49m
[1;32m   2840[0m [38;5;28;01mfor[39;00m sfig [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39msubfigs:
[1;32m   2841[0m     sfig[38;5;241m.[39mdraw(renderer)

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         [43ma[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/artist.py:50[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     47[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     48[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 50[0m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m     51[0m [38;5;28;01mfinally[39;00m:
[1;32m     52[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/axes/_base.py:3091[0m, in [0;36m_AxesBase.draw[0;34m(self, renderer)[0m
[1;32m   3088[0m         a[38;5;241m.[39mdraw(renderer)
[1;32m   3089[0m     renderer[38;5;241m.[39mstop_rasterizing()
[0;32m-> 3091[0m [43mmimage[49m[38;5;241;43m.[39;49m[43m_draw_list_compositing_images[49m[43m([49m
[1;32m   3092[0m [43m    [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43martists[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfigure[49m[38;5;241;43m.[39;49m[43msuppressComposite[49m[43m)[49m
[1;32m   3094[0m renderer[38;5;241m.[39mclose_group([38;5;124m'[39m[38;5;124maxes[39m[38;5;124m'[39m)
[1;32m   3095[0m [38;5;28mself[39m[38;5;241m.[39mstale [38;5;241m=[39m [38;5;28;01mFalse[39;00m

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         [43ma[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/artist.py:50[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     47[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     48[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 50[0m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m     51[0m [38;5;28;01mfinally[39;00m:
[1;32m     52[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/text.py:685[0m, in [0;36mText.draw[0;34m(self, renderer)[0m
[1;32m    682[0m renderer[38;5;241m.[39mopen_group([38;5;124m'[39m[38;5;124mtext[39m[38;5;124m'[39m, [38;5;28mself[39m[38;5;241m.[39mget_gid())
[1;32m    684[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39m_cm_set(text[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_get_wrapped_text()):
[0;32m--> 685[0m     bbox, info, descent [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_layout[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m    686[0m     trans [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_transform()
[1;32m    688[0m     [38;5;66;03m# don't use self.get_position here, which refers to text[39;00m
[1;32m    689[0m     [38;5;66;03m# position in Text:[39;00m

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/text.py:296[0m, in [0;36mText._get_layout[0;34m(self, renderer)[0m
[1;32m    290[0m [38;5;28;01mdef[39;00m [38;5;21m_get_layout[39m([38;5;28mself[39m, renderer):
[1;32m    291[0m     [38;5;124;03m"""[39;00m
[1;32m    292[0m [38;5;124;03m    Return the extent (bbox) of the text together with[39;00m
[1;32m    293[0m [38;5;124;03m    multiple-alignment information. Note that it returns an extent[39;00m
[1;32m    294[0m [38;5;124;03m    of a rotated text when necessary.[39;00m
[1;32m    295[0m [38;5;124;03m    """[39;00m
[0;32m--> 296[0m     key [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_layout_cache_key[49m[43m([49m[43mrenderer[49m[38;5;241;43m=[39;49m[43mrenderer[49m[43m)[49m
[1;32m    297[0m     [38;5;28;01mif[39;00m key [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_cached:
[1;32m    298[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_cached[key]

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/text.py:280[0m, in [0;36mText._get_layout_cache_key[0;34m(self, renderer)[0m
[1;32m    275[0m [38;5;28;01mdef[39;00m [38;5;21m_get_layout_cache_key[39m([38;5;28mself[39m, renderer[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    276[0m     [38;5;124;03m"""[39;00m
[1;32m    277[0m [38;5;124;03m    Return a hashable tuple of properties that lets `_get_layout` know[39;00m
[1;32m    278[0m [38;5;124;03m    whether a previously computed layout can be reused.[39;00m
[1;32m    279[0m [38;5;124;03m    """[39;00m
[0;32m--> 280[0m     x, y [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_unitless_position[49m[43m([49m[43m)[49m
[1;32m    281[0m     renderer [38;5;241m=[39m renderer [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_renderer
[1;32m    282[0m     [38;5;28;01mreturn[39;00m (
[1;32m    283[0m         x, y, [38;5;28mself[39m[38;5;241m.[39mget_text(), [38;5;28mhash[39m([38;5;28mself[39m[38;5;241m.[39m_fontproperties),
[1;32m    284[0m         [38;5;28mself[39m[38;5;241m.[39m_verticalalignment, [38;5;28mself[39m[38;5;241m.[39m_horizontalalignment,
[0;32m   (...)[0m
[1;32m    287[0m         [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39mdpi, weakref[38;5;241m.[39mref(renderer),
[1;32m    288[0m     )

File [0;32m/usr/local/lib/python3.9/site-packages/matplotlib/text.py:830[0m, in [0;36mText.get_unitless_position[0;34m(self)[0m
[1;32m    827[0m [38;5;124;03m"""Return the (x, y) unitless position of the text."""[39;00m
[1;32m    828[0m [38;5;66;03m# This will get the position with all unit information stripped away.[39;00m
[1;32m    829[0m [38;5;66;03m# This is here for convenience since it is done in several locations.[39;00m
[0;32m--> 830[0m x [38;5;241m=[39m [38;5;28;43mfloat[39;49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mconvert_xunits[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_x[49m[43m)[49m[43m)[49m
[1;32m    831[0m y [38;5;241m=[39m [38;5;28mfloat[39m([38;5;28mself[39m[38;5;241m.[39mconvert_yunits([38;5;28mself[39m[38;5;241m.[39m_y))
[1;32m    832[0m [38;5;28;01mreturn[39;00m x, y

[0;31mTypeError[0m: only size-1 arrays can be converted to Python scalars
TypeError: only size-1 arrays can be converted to Python scalars

